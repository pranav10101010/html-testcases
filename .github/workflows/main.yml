name: Test and Post Pretty HTML Report in PR

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Convert HTML to text
        run: |
          sudo apt-get update && sudo apt-get install -y w3m
          w3m -dump ./full_status.html > full_status.txt

      - name: Prepare Pretty PR Comment
        id: prepare_comment
        run: |
          # Start comment
          echo "## 🧪 Test Report" > comment.md

          # Add Configuration Data in collapsible section
          echo "<details><summary>Configuration Data</summary>" >> comment.md
          awk '/Date of Report Creation/,/Full Status Section/' full_status.txt >> comment.md
          echo "</details>" >> comment.md
          echo "" >> comment.md

          # Add Full Status Section as a markdown table
          echo "| Module | Status | Build Time | Testcases | Execute | Statements | Branches |" >> comment.md
          echo "|--------|--------|------------|-----------|---------|------------|---------|" >> comment.md

          awk '
          BEGIN {section=0}
          /Full Status Section/ {section=1; next}
          section==1 && NF>1 {
            module=$1
            for(i=2;i<=NF-6;i++){module=module" "$i}
            status=$NF
            # Use ✅ for NORMAL or 100%, ❌ otherwise
            icon="❌"
            if(status ~ /NORMAL|100%/) icon="✅"
            printf "| %s | %s | %s | %s | %s | %s | %s |\n", module, icon, $(NF-5), $(NF-4), $(NF-3), $(NF-2), $(NF-1)
          }' full_status.txt >> comment.md

          # Save table in env for PR comment
          echo "PR_COMMENT<<EOF" >> $GITHUB_ENV
          cat comment.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post Pretty PR Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ env.PR_COMMENT }}
